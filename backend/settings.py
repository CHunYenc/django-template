"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 3.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
from pathlib import Path
from backend import variables
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = variables.SECRET_KEY

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = variables.DEBUG

ALLOWED_HOSTS = variables.ALLOWED_HOSTS

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # packages
    "corsheaders",
    'rest_framework',
    # 'rest_framework_simplejwt', # module/auth
    # 'rest_framework_simplejwt.token_blacklist', # simple-jwt 提供的黑名單功能 / module/auth
    'django_filters',
    'drf_spectacular',  # api-swagger,
    "debug_toolbar",  # django-debug-toolbar
    # apps
    'apps.system'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",  # corsheaders
    "debug_toolbar.middleware.DebugToolbarMiddleware",  # django-debug-toolbar
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': variables.DATABASE
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'zh-hant'

TIME_ZONE = 'Asia/Tapipei'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ------------------------------
# module/auth setting
# ------------------------------

# AUTH_USER_MODEL = "xx.User"

# ------------------------------
# django-cors-headers setting
# ------------------------------

# Offline
CORS_ALLOW_ALL_ORIGINS = True
# Online
# CORS_ALLOW_ALL_ORIGINS = False
# CORS_ALLOWED_ORIGINS = [
# "http://localhost:8080",
# "http://127.0.0.1:8080"
# ]

# ------------------------------
# django-debug-toolbar setting
# ------------------------------

INTERNAL_IPS = [
    # ...
    "127.0.0.1",
    # ...
]

# ------------------------------
# django-rest-framework setting
# ------------------------------

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    "DATETIME_FORMAT": "%Y-%m-%d %H:%M:%S",
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'CHUNYEN Django-template API',
    'DESCRIPTION': 'CHUNYEN Django-template API',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
    # 'SCHEMA_PATH_PREFIX': None,
    # 'SCHEMA_PATH_PREFIX_TRIM': True,
    # 'TAGS': ['GET', 'POST'],
    # 'CONTACT': {"name": "HELLO"},
    # OTHER SETTINGS
}

# ------------------------------
# logging setting
# ------------------------------
import logging  # noqa

LOGS_FOLDER = os.path.join(BASE_DIR, 'logs')
if not os.path.isdir(LOGS_FOLDER):
    logging.info("CREATE LOGS Folder.")
    os.makedirs(LOGS_FOLDER)
else:
    logging.info("LOGS Folder is exists.")

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,  # 設定已存在的logger不失效
    'formatters': {
        'standard': {
            'format': '%(asctime)s - %(levelname)s - %(filename)s -> %(funcName)s() - %(lineno)d : %(message)s',
        }
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'standard'
        },
        'default': {
            'level': 'DEBUG',
            'class': 'logging.handlers.TimedRotatingFileHandler',
            # 'filename': os.path.join(BASE_DIR, "logs", 'backend.log'),
            'filename': os.path.join(BASE_DIR, 'backend.log'),
            'when': 'midnight',
            'formatter': 'standard',
        },
    },
    'loggers': {
        'django': {
            'level': 'INFO',
            'handlers': ['console', 'default']
        },
        'gunicorn': {
            'level': 'INFO',
            'handlers': ['console', 'default']
        }
    },
}
